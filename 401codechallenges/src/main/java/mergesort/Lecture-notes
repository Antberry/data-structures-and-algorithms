## Learning Objective

- Will learn how to sort an array using the merge sort method.
- Test the method to see if the code works.

## Lecture Flow

- What is an array.
    - Array is an object which contains elements of a similar data type.
- How to Merge Sort an array;
    - The idea is to keep breaking the array in half until you cannot break in half anymore. Then you want to sort it
    and merge it back together as you go.
    - test and empty array, array with duplicate numbers, and a many numbers unsorted numbers, and test a not equal sorted
    array.


## Visual
- [Code Snippet]()
- [Test Snippet]()

## PSEUDO


ALGORITHM Mergesort(arr)
    DECLARE n <-- arr.length
           
    if n > 1
      DECLARE mid <-- n/2
      DECLARE left <-- arr[0...mid]
      DECLARE right <-- arr[mid...n]
      // sort the left side
      Mergesort(left)
      // sort the right side
      Mergesort(right)
      // merge the sorted left and right sides together
      Merge(left, right, arr)

ALGORITHM Merge(left, right, arr)
    DECLARE i <-- 0
    DECLARE j <-- 0
    DECLARE k <-- 0

    while i < left.length && j < right.length
        if left[i] <= right[j]
            arr[k] <-- left[i]
            i <-- i + 1
        else
            arr[k] <-- right[j]
            j <-- j + 1
            
        k <-- k + 1

    if i = left.length
       set remaining entries in arr to remaining values in right
    else
       set remaining entries in arr to remaining values in left
       
 ## Resources
 [Website for Merge Sort](https://www.geeksforgeeks.org/merge-sort/)
 
 [Website for Merge Sort](https://www.baeldung.com/java-merge-sort)
 
 [Video for merge sort](https://www.youtube.com/watch?v=iMT7gTPpaqw)



